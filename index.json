[{"categories":["Tools"],"content":"1. 连接 通过SSH，首先需要确定自己已经安装了openSSH，本次是在Windows环境下进行。选用自己习惯的软件即可，我用过putty, Xshell, VScode等等，由于自己太懒配置不好vim，而且终端看久了眼疼，就想采用VS Code来进行连接。 ","date":"2021-08-12","objectID":"https://maxwellf1.github.io/2021-08-12/:1:0","series":null,"tags":["Server"],"title":"远程服务器连接","uri":"https://maxwellf1.github.io/2021-08-12/"},{"categories":["Tools"],"content":"通用流程 安装SSH和VS code，并在VS code的扩展商店里添加Remote SSH相关插件。 生成密钥。在.ssh目录下可以用ssh-keygen命令生成公钥和私钥，并将公钥传到远程服务器的根目录下.ssh文件夹中。 连接远程主机(例如通过ssh username@ip -p port命令)，在.ssh目录下通过cat xxx.pub \u003e\u003e authorized_keys命令将公钥添加到authorized_keys中。 采用私钥进行登录(例如ssh username@ip -p port -i id_rsa命令)。点击VS code中Remote SSH的设置键，通常选第一个configuration file进入，根据需要填写下面的参数信息： Host: 连接的主机的名称，可以自己起名 Hostname: remote server的IP地址 Port: 用于登录远程服务器的端口 User: 用于登录远程主机的用户名 IdentityFile: 私钥在本地的路径 ProxyCommand: 需要执行的指令 完成并保存后就可以发现在左侧添加上的新的远程服务器，点击连接即可。 ","date":"2021-08-12","objectID":"https://maxwellf1.github.io/2021-08-12/:1:1","series":null,"tags":["Server"],"title":"远程服务器连接","uri":"https://maxwellf1.github.io/2021-08-12/"},{"categories":["Tools"],"content":"跳板机 有时候例如自己实验的的服务器是设置在内网环境中的，用自己的客户端在公共环境无法直接连接，通常采用跳板机来解决这个问题。一般是先通过ssh连接到跳板机之后，再跳转到所需的服务器，同样是只能用vim使用命令行环境，由于配置起来比较麻烦，使用不便，还是想用VS code来提高便捷性。配置的过程与通用流程稍有不同，因为涉及到两个机器，所以在configuration files中要按照如下方式填写： Host JumpMachine #跳板机名称 HostName XXX.XXX.XXX.XXX #跳板机IP Port XXX #跳板机ssh端口 User root #跳板机用户名 IdentityFile xx\\xx\\xx.. Host TargetMachine #远程服务器名称 HostName XXX.XXX.XXX.XXX #远程服务器IP Port XXX #远程服务器ssh端口 User root #远程服务器用户名 ProxyCommand ssh(替换为自己安装的ssh的路径，例如C:\\Windows\\System32\\OpenSSH\\ssh.exe) -W %h:%p JumpMachine 同样的，为了省去密码等，可以发送公钥到跳板机和服务器，并添加到authorized_keys中(并在参数中添加IdentityFile)。(注：所有前序机器的id_rsa.pub都要添加到最终机器上。比如说有3台机ABC，其中B是跳板机。那么A的.pub要在B跟C上分别导入一次，B的.pub要在C上导入一次，共3次，才能完全实现免密登录远程服务器) 为了防止发送公钥时覆盖了目标机器上的authorized_keys文件，可以用ssh-copy-id命令来复制公钥 ssh-copy-id -i id_rsa.pub \"-p 跳板机的ssh端口 用户名@跳板机IP\" 将笔记本的公钥也同样的发送到远程服务器中 可以先使用scp将公钥发送至跳板机 scp -P 跳板机ssh端口 id_rsa.pub 跳板机用户名@跳板机IP:~/.ssh/temp 再通过ssh连接至跳板机，并切换到~/.ssh目录下，将其发送至远程服务器 scp -P 远程服务器ssh端口 temp 远程服务器用户名@远程服务器IP:~/.ssh/temp 最后通过ssh连接至远程服务器，切换到~/.ssh目录下，手动将公钥拼接到authorized_keys中 cat temp \u003e\u003e authorized_keys 配置保存后就可以在左边的SSH TARGETS中看到配置好的JumpMachine和TargetMachine，选择TargetMachine进行连接即可。 ","date":"2021-08-12","objectID":"https://maxwellf1.github.io/2021-08-12/:1:2","series":null,"tags":["Server"],"title":"远程服务器连接","uri":"https://maxwellf1.github.io/2021-08-12/"},{"categories":["Tools"],"content":"2. 文件传输 个人由于懒而且记不住命令还是比较习惯有GUI，平时比较常用的是WinSCP,这是一个在Windows环境下使用的SSH的开源图形化SFTP客户端，同时支持SCP协议。它可以在本地与远程计算机之间安全的传输文件，并可以直接编辑文件。它可以很直观的看到文件的层级结构和控制文件的传输而无需依赖其它插件。 ","date":"2021-08-12","objectID":"https://maxwellf1.github.io/2021-08-12/:2:0","series":null,"tags":["Server"],"title":"远程服务器连接","uri":"https://maxwellf1.github.io/2021-08-12/"},{"categories":["Tools"],"content":"基本使用 新建会话主机名填入IP，端口号填入自己的端口号，再输入用户名和密码，保存并登陆之后应该可以看到文件的界面。 ","date":"2021-08-12","objectID":"https://maxwellf1.github.io/2021-08-12/:2:1","series":null,"tags":["Server"],"title":"远程服务器连接","uri":"https://maxwellf1.github.io/2021-08-12/"},{"categories":["Tools"],"content":"跳板机 在session界面点击高级选项，在高级设置中找到隧道/Tunnel，勾选上使用SSH隧道，并输入跳转机的IP、端口号以及用户名和密码，如果不输入密码，可以在Tunnel界面下方添加自己的私钥文件(需要是ppk，如果不是可以用PuTTYgen来生成/转换)。登录界面的信息填最终想通过跳转机连接到的服务器的配置即可。 ","date":"2021-08-12","objectID":"https://maxwellf1.github.io/2021-08-12/:2:2","series":null,"tags":["Server"],"title":"远程服务器连接","uri":"https://maxwellf1.github.io/2021-08-12/"},{"categories":["Tools"],"content":"命令 scp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。可能会稍微影响一下速度。当你服务器硬盘变为只读 read only system时，用scp可以帮你把文件移出来。另外，scp还非常不占资源，不会提高多少系统负荷，在这一点上，rsync就远远不及它了。虽然 rsync比scp会快一点，但当小文件众多的情况下，rsync会导致硬盘I/O非常高，而scp基本不影响系统正常使用。 当在同一个服务器不同账户之间传输文件时可以用scp命令。例如想把服务器下B用户目录下的某文件b拷到A用户目录下，可以采用如下指令 scp -r dir_B/b serverIP:/dir_A 具体命令及参数可以见参考文献的几个链接。 ","date":"2021-08-12","objectID":"https://maxwellf1.github.io/2021-08-12/:2:3","series":null,"tags":["Server"],"title":"远程服务器连接","uri":"https://maxwellf1.github.io/2021-08-12/"},{"categories":["Tools"],"content":"参考文献 VS Code Remote SSH配置 vscode通过跳板机连接远程服务器_huitailangyz的博客-CSDN博客 使用WinScp连接远程服务器和传输文件 - 你要 - 博客园 (cnblogs.com) winscp通过跳板机访问远程服务器（使用秘钥的方式传输文件） - 华为云 (huaweicloud.com) Linux scp -r命令主机间文件复制_学亮编程手记-CSDN博客 scp详解_LZJWXJ树袋熊-CSDN博客 Linux在同一台服务器不同账号之间传输文件_蓝一潇的博客-CSDN博客 ","date":"2021-08-12","objectID":"https://maxwellf1.github.io/2021-08-12/:3:0","series":null,"tags":["Server"],"title":"远程服务器连接","uri":"https://maxwellf1.github.io/2021-08-12/"},{"categories":[],"content":"1.为什么建立这个博客 博客这玩意儿，应该很早以前就有了。记得我上小学的时候老师们通过某个叫“校讯通”的平台建立了博客，有时候会发布一些信息，记录一些班级事务之类的。当时我也跟风，没记错的话是在网易建立了自己的博客，还各种费心思换主题，有水墨、竹林、牛皮纸等(🤣。后来也就当成了一个玩具一样，改个配色，改个字体，也没有当成个正事儿，最后随着各种新兴事物的出现，早就把写博客这档子事儿抛到九霄云外去了。 我从来不喜欢动手记录，例如中学的时候老师一遍又一遍的反复教育我整理错题和笔记，我却感觉这是浪费时间，完全不弄或者随便糊弄几笔了事儿。大学时候。我仍然引以为傲的保持着自己的“优良传统”，其实逐渐感觉到吃力了，毕竟这些课程比中学那点知识不知道高到哪里去了，但为了保持自己可笑的“独特习惯”，我就是不愿意记笔记，作业也是写完就了事儿，逐渐出现了很多自己一次又一次记不住的知识，写不对的题，敲不出来的code。还带着之前的思维，毕竟中学总觉得自己挺聪明，效率高，而且现在自己这么混，都没有挂科，成绩还能凑合中等，“要是我努努力，细心一点，肯定能变得很厉害，我只是不愿意罢了”。其实那个时候，我开始发觉自己已经眼高手低了，只是心底里想逃避罢了，“要是我更用心，反而没什么提高，别人会不会笑话我效率低，笑话我是个笨蛋呢”，所以还是保持着陋习。2018年我还看了姜文的电影，《邪不压正》，开玩笑的跟哥们说道：“正经人谁记笔记啊？是啊。你记笔记吗？我不记，你记笔记吗？谁能把学会的写笔记里？写出来的能叫学会的？下贱！”👎更觉得记东西反而是浪费时间，会了就是会，不会的咋着都学不会🤡 后来，一些事情改变了我，我开始意识到自己的不足，也决定尝试改变，摆正自己的定位，做一些自己之前看不上眼的事儿来补救。但仍然觉得很低效，看似自己在忙活着，一段时间过后回想起来，感觉自己还是什么都没学会，再遇到同样的问题时，很多时候还是要重新查，一直没想到该怎么解决这个问题。最近看到网上的推荐，读了Philip J.Guo的The Ph.D. Grind，感触颇深，想不错的完成博士学业确实是一门学问，无论是身心还是自己的学术技能都要不断的经受Grind，但如何度过好这个训练的过程，让这些grind变得有意义，是读博应该思考的。其实这一年来我也在思考类似的问题，也找了很多长辈和同辈讨论，后来总结出 “反馈” 大概对于很多人至少对于我是很重要的。一方面我很畏惧没头没尾的不踏实感，有反馈才能更好的证明“存在”；另一方面，费曼学习法中通过自己的总结和他人的反馈，能够帮助自己更好的消化知识，或者触发新的灵感。 因此，我选择开始写博客来记录。这样回过头来可以大概知道自己学到或者曾经接触了些什么，还能在不断的回顾中加深印象，查漏补缺。我再也不想因为一些幼稚的想法而耽误自己，努力，永远不嫌早，也永远不会太晚。 ","date":"2021-08-11","objectID":"https://maxwellf1.github.io/2021-08-11/:1:0","series":null,"tags":[],"title":"写在开始的话","uri":"https://maxwellf1.github.io/2021-08-11/"},{"categories":[],"content":"2.一些说明 ","date":"2021-08-11","objectID":"https://maxwellf1.github.io/2021-08-11/:2:0","series":null,"tags":[],"title":"写在开始的话","uri":"https://maxwellf1.github.io/2021-08-11/"},{"categories":[],"content":"2.1关于本博客 本博客基于HUGO的DoIt主题创建。 Title的icon采用了earlybirds，以激励自己笨鸟先飞。 主页的subtitle\"觉悟者恒幸福\"是jojo的奇妙冒险第六部石之岛中恩里克普奇神父说的一句话，我赞同这句话，但我并不认为普奇神父自己做到了这一点，相对于他，布加拉提、米斯达、乔鲁诺等人应该都是这句话更好的践行者。其实这不过是老生常谈的宿命论，但如何看待，如何行动会收获不一样的心境和结果，就像茸茸说的那样，所谓觉悟，不是牺牲的心，而是在黑暗的荒野中开辟出一条前进的道路。我希望自己能成为一个有觉悟的人，不为自己看到的所谓“宿命”而哀叹或者是丧气的接受，而是不断追求。 ","date":"2021-08-11","objectID":"https://maxwellf1.github.io/2021-08-11/:2:1","series":null,"tags":[],"title":"写在开始的话","uri":"https://maxwellf1.github.io/2021-08-11/"},{"categories":[],"content":"2.2 关于一些事情 博客的title叫Separator，Wiki词条中对它有更详细的说明。大概是两年前(2019年底2020年初)的样子我给自己想到了这个NickName，自以为很妙，我很喜欢这个代号。一方面和我的名字有一定的联系，另一个方面，它也说明了我的转变，也是我努力的方向。 应该是那年某学期选课的时候，和本科导师聊过几句，每次见面的时候他都是鼓励我，那次也不例外，但有些话大概是作为第一个分隔符的存在，让我的心态发生了转变。那次突然想和老师聊聊未来的规划，就不怕丢人的说了一些自己的情况和想法，也斗胆问了一下老师当年的故事。他居然很乐意和我聊这些，先肯定了我的一些想法，也告诉我他自己当年也有过迷茫的时候，但一个人要做的并不是封闭自我或者自暴自弃，而是要迫使自己接触更多的东西，去做更多的尝试，同时也更努力的去做一些目前应该做好的事儿，他说只要这样，就算我考试60分甚至不及格，在他心里都是一个很优秀的本科生。我当时的成绩是在系里很下游，已经太久没有跟“优秀”沾过边了，老师说的话刺痛了我也点醒了我，我之前所做的那些不过是逃避和借口罢了。 从那学期开始，我决心多学多看多钻研，也开始做那些之前觉得笨学生才会做的事情，因为我明白，自己已经是一个又笨基础又差的学生了。应该是在那个学期，我拿到了大学以来第一个专业课90+，从此之后，第二个、第三个…, 92、95、99…，那几个学期九十左右的均分也让我最终奇妙的获得了保研资格。还主动进组体验了几次科研，并且发表了一篇短文，虽然只是在一个规模很小的Workshop上，但也算长了长见识。这里，又是一个分隔符，我不再看不起这些那些，开始鼓励自己多去尝试，“不试试怎么知道行不行呢”，“人总要有梦想的，万一实现了呢”。 后来发生了更多奇妙的事情，也遇到了很多贵人帮助，让我划上了一个又一个的分隔符，心理和状态不断进入新的阶段。非常感谢这些人这些事儿❤️。我也深知，在以后的日子里，大概会划上更多新的分隔符，但是新阶段的情况和走向如何，才是我应该考虑并为之努力的。此外，Separator另一个意思为分离的装置，希望在以后的日子里，我能将知识、项目、乃至生活等等都做出一个好的分离，清晰透彻的观察问题，并将各组分做良好的拆分，安排好、解决好各种事务。 ","date":"2021-08-11","objectID":"https://maxwellf1.github.io/2021-08-11/:2:2","series":null,"tags":[],"title":"写在开始的话","uri":"https://maxwellf1.github.io/2021-08-11/"}]